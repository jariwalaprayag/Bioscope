From c531d5fe3b354b21b6f71d4f114533a726393984 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Sun, 13 Dec 2015 18:19:06 +0000
Subject: [PATCH] Sometimes the shutdown or reboot process can hang:

* Ensure that logind receives a request to initiate the exit process.

* Allow OSMC's sigterm handler to know when to do the business or not, otherwise we get code on EXIT and POWERDOWN/REBOOT paths

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/Application.cpp | 6 ++++--
 xbmc/Application.h   | 5 +++++
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index b3d5c77..137bed7 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2402,8 +2402,9 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
   switch (pMsg->dwMessage)
   {
   case TMSG_POWERDOWN:
-    Stop(EXITCODE_POWERDOWN);
+    m_ShuttingDown = true;
     g_powerManager.Powerdown();
+    Stop(EXITCODE_POWERDOWN);
     break;
 
   case TMSG_QUIT:
@@ -2428,8 +2429,9 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
 
   case TMSG_RESTART:
   case TMSG_RESET:
-    Stop(EXITCODE_REBOOT);
+    m_ShuttingDown = true;
     g_powerManager.Reboot();
+    Stop(EXITCODE_REBOOT);
     break;
 
   case TMSG_RESTARTAPP:
diff --git a/xbmc/Application.h b/xbmc/Application.h
index c14f62d..22a6026 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -395,6 +395,11 @@ public:
 
   std::unique_ptr<CServiceManager> m_ServiceManager;
 
+  /*! \Allow OSMC's sigterm handler to know when to do the business or not, otherwise we get code on EXIT and POWERDOWN/REBOOT paths
+  */
+  bool m_ShuttingDown;
+  bool isShuttingDown() { return m_ShuttingDown; }
+
   /*!
   \brief Locks calls from outside kodi (e.g. python) until framemove is processed.
   */
-- 
2.7.4

