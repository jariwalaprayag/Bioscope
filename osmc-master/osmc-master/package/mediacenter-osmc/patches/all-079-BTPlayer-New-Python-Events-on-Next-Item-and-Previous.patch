From 9072444d0ee1b94e001ea285ec202841e4cf337d Mon Sep 17 00:00:00 2001
From: Gerald Barker <gezb@users.noreply.github.com>
Date: Tue, 20 Dec 2016 22:44:07 +0000
Subject: [PATCH 1/5] [BTPlayer] New Python Events on Next Item and Previous
 Item

---
 xbmc/Application.cpp                | 26 ++++++++++++++++++++++++++
 xbmc/Application.h                  |  4 +++-
 xbmc/cores/IPlayerCallback.h        |  2 ++
 xbmc/interfaces/legacy/Player.cpp   | 22 ++++++++++++++++++++++
 xbmc/interfaces/legacy/Player.h     | 31 +++++++++++++++++++++++++++++++
 xbmc/interfaces/python/XBPython.cpp | 24 ++++++++++++++++++++++++
 xbmc/interfaces/python/XBPython.h   |  2 ++
 7 files changed, 110 insertions(+), 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 1570714..a493970 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2174,6 +2174,17 @@ bool CApplication::OnAction(const CAction &action)
     return true;
   }
 
+   // fire python events
+   if (action.GetID() == ACTION_PREV_ITEM)
+     {
+       OnPreviousItem();
+     }
+
+   if (action.GetID() == ACTION_NEXT_ITEM)
+     {
+       OnNextItem();
+     }
+
   // Now check with the playlist player if action can be handled.
   // In case of the action PREV_ITEM, we only allow the playlist player to take it if we're less than 3 seconds into playback.
   if (!(action.GetID() == ACTION_PREV_ITEM && m_pPlayer->CanSeek() && GetTime() > 3) )
@@ -3724,6 +3735,21 @@ void CApplication::OnPlayBackSeekChapter(int iChapter)
 #endif
 }
 
+void CApplication::OnPreviousItem()
+{
+  
+#ifdef HAS_PYTHON
+  g_pythonParser.OnPreviousItem();
+#endif
+}
+
+void CApplication::OnNextItem()
+{
+#ifdef HAS_PYTHON
+  g_pythonParser.OnNextItem();
+#endif
+}
+
 bool CApplication::IsPlayingFullScreenVideo() const
 {
   return m_pPlayer->IsPlayingVideo() && g_graphicsContext.IsFullScreenVideo();
diff --git a/xbmc/Application.h b/xbmc/Application.h
index a9d9bf5..b975385 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -179,7 +179,9 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset) override;
   virtual void OnPlayBackSeekChapter(int iChapter) override;
   virtual void OnPlayBackSpeedChanged(int iSpeed) override;
-
+  virtual void OnPreviousItem() override;
+  virtual void OnNextItem() override;
+  
   virtual int  GetMessageMask() override;
   virtual void OnApplicationMessage(KODI::MESSAGING::ThreadMessage* pMsg) override;
 
diff --git a/xbmc/cores/IPlayerCallback.h b/xbmc/cores/IPlayerCallback.h
index a89d8b7..0698564 100644
--- a/xbmc/cores/IPlayerCallback.h
+++ b/xbmc/cores/IPlayerCallback.h
@@ -33,4 +33,6 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset) {};
   virtual void OnPlayBackSeekChapter(int iChapter) {};
   virtual void OnPlayBackSpeedChanged(int iSpeed) {};
+  virtual void OnPreviousItem() {};
+  virtual void OnNextItem() {};
 };
diff --git a/xbmc/interfaces/legacy/Player.cpp b/xbmc/interfaces/legacy/Player.cpp
index 6934a59..7932975 100644
--- a/xbmc/interfaces/legacy/Player.cpp
+++ b/xbmc/interfaces/legacy/Player.cpp
@@ -238,6 +238,18 @@ namespace XBMCAddon
       invokeCallback(new CallbackFunction<Player,int>(this,&Player::onPlayBackSeekChapter,chapter));
     }
 
+    void Player::OnPreviousItem()
+    { 
+      XBMC_TRACE;
+      invokeCallback(new CallbackFunction<Player>(this,&Player::onPreviousItem));
+    }
+
+    void Player::OnNextItem()
+    { 
+      XBMC_TRACE;
+      invokeCallback(new CallbackFunction<Player>(this,&Player::onNextItem));
+    }
+
     void Player::onPlayBackStarted()
     {
       XBMC_TRACE;
@@ -283,6 +295,16 @@ namespace XBMCAddon
       XBMC_TRACE;
     }
 
+    void Player::onPreviousItem()
+    { 
+      XBMC_TRACE;
+    }
+
+    void Player::onNextItem()
+    { 
+      XBMC_TRACE;
+    }
+
     bool Player::isPlaying()
     {
       XBMC_TRACE;
diff --git a/xbmc/interfaces/legacy/Player.h b/xbmc/interfaces/legacy/Player.h
index 4d97d76..9a4ea07 100644
--- a/xbmc/interfaces/legacy/Player.h
+++ b/xbmc/interfaces/legacy/Player.h
@@ -346,6 +346,35 @@ namespace XBMCAddon
 #else
       virtual void onPlayBackSeekChapter(int chapter);
 #endif
+
+#ifdef DOXYGEN_SHOULD_USE_THIS
+      ///
+      /// \ingroup python_PlayerCB
+      /// @brief \python_func{ onPreviousItem()() }
+      ///-----------------------------------------------------------------------
+      /// onPreviousItem method.
+      ///
+      /// Will be called when Kodi moves to the previous file.
+      ///
+      onPreviousItem();
+#else
+      virtual void onPreviousItem();
+#endif
+
+#ifdef DOXYGEN_SHOULD_USE_THIS
+      ///
+      /// \ingroup python_PlayerCB
+      /// @brief \python_func{ onNextItem()() }
+      ///-----------------------------------------------------------------------
+      /// onNextItem method.
+      ///
+      /// Will be called when Kodi moves to the next file.
+      ///
+      onNextItem();
+#else
+      virtual void onNextItem();
+#endif
+
       /// @}
 
 #ifdef DOXYGEN_SHOULD_USE_THIS
@@ -720,6 +749,8 @@ namespace XBMCAddon
       SWIGHIDDENVIRTUAL void    OnPlayBackSpeedChanged(int iSpeed);
       SWIGHIDDENVIRTUAL void    OnPlayBackSeek(int iTime, int seekOffset);
       SWIGHIDDENVIRTUAL void    OnPlayBackSeekChapter(int iChapter);
+      SWIGHIDDENVIRTUAL void OnPreviousItem();
+      SWIGHIDDENVIRTUAL void OnNextItem();
 #endif
 
     protected:
diff --git a/xbmc/interfaces/python/XBPython.cpp b/xbmc/interfaces/python/XBPython.cpp
index bc84af9..55991ae 100644
--- a/xbmc/interfaces/python/XBPython.cpp
+++ b/xbmc/interfaces/python/XBPython.cpp
@@ -229,6 +229,30 @@ void XBPython::OnQueueNextItem()
   }
 }
 
+
+void XBPython::OnPreviousItem()
+{
+  XBMC_TRACE;
+  LOCK_AND_COPY(std::vector<PVOID>,tmp,m_vecPlayerCallbackList);
+  for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+  {
+    if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList,(*it)))
+      ((IPlayerCallback*)(*it))->OnPreviousItem();
+  }
+}
+
+void XBPython::OnNextItem()
+{
+  XBMC_TRACE;
+  LOCK_AND_COPY(std::vector<PVOID>,tmp,m_vecPlayerCallbackList);
+  for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+  {
+    if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList,(*it)))
+      ((IPlayerCallback*)(*it))->OnNextItem();
+  }
+}
+
+
 void XBPython::RegisterPythonPlayerCallBack(IPlayerCallback* pCallback)
 {
   XBMC_TRACE;
diff --git a/xbmc/interfaces/python/XBPython.h b/xbmc/interfaces/python/XBPython.h
index 2689451..a035188 100644
--- a/xbmc/interfaces/python/XBPython.h
+++ b/xbmc/interfaces/python/XBPython.h
@@ -77,6 +77,8 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset);
   virtual void OnPlayBackSeekChapter(int iChapter);
   virtual void OnQueueNextItem();
+  virtual void OnPreviousItem();
+  virtual void OnNextItem();
 
   virtual void Announce(ANNOUNCEMENT::AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data);
   void RegisterPythonPlayerCallBack(IPlayerCallback* pCallback);
-- 
2.7.4

